import { useSettings } from '../contexts/SettingsContext';
import { VisualizationType, ColorPalette, FrequencyBand } from '../types';

const translations = {
  ru: {
    title: 'Аудио Визуализатор',
    welcome_title: 'Добро пожаловать',
    welcome_subtitle: 'Загрузите аудиофайл, чтобы начать',
    upload: 'Загрузить',
    upload_tooltip: 'Загрузить аудиофайл(ы)',
    volume_label: 'Громкость',
    settings_tooltip: 'Настройки',
    settings_title: 'Настройки',
    language: 'Язык',
    russian: 'Русский',
    english: 'English',
    color_palette: 'Цветовая палитра',
    visualization_type: 'Тип визуализации',
    intensity: 'Интенсивность',
    intensity_description: 'Сила и амплитуда визуальных эффектов',
    playback_speed: 'Скорость воспроизведения',
    playback_speed_description: 'Замедление или ускорение трека',
    visualization_equalizer: 'Эквалайзер визуализации',
    bass_gain: 'Усиление баса',
    mids_gain: 'Усиление средних',
    treble_gain: 'Усиление высоких',
    bass_mid_crossover: 'Кроссовер Бас/Средние',
    mid_treble_crossover: 'Кроссовер Средние/Высокие',
    fullscreen_enter: 'Во весь экран',
    fullscreen_exit: 'Выйти из полноэкранного режима',
    next_track: 'Следующий трек',
    prev_track: 'Предыдущий трек',
    no_track: 'Трек не выбран',
    ai_palette_title: 'Генератор палитр (ИИ)',
    ai_palette_prompt: 'Опишите настроение (например, "неоновый город")',
    ai_generate: 'Создать',
    ai_generating: 'Создание...',
    [FrequencyBand.BASS]: 'Бас',
    [FrequencyBand.MIDS]: 'Средние',
    [FrequencyBand.TREBLE]: 'Высокие',
    [ColorPalette.AI]: 'Своя (ИИ)',
    [VisualizationType.BARS]: 'Столбцы',
    [VisualizationType.WAVEFORM]: 'Волна',
    [VisualizationType.RADIAL]: 'Радиал',
    [VisualizationType.GALAXY]: 'Галактика',
    [VisualizationType.CIRCLES]: 'Круги',
    [VisualizationType.GRID]: 'Сетка',
    [VisualizationType.FLOWER]: 'Цветок',
    [VisualizationType.STRINGS]: 'Струны',
    [VisualizationType.TUNNEL]: 'Туннель',
    [ColorPalette.VIBRANT]: 'Яркая',
    [ColorPalette.OCEAN]: 'Океан',
    [ColorPalette.FOREST]: 'Лес',
    [ColorPalette.SUNSET]: 'Закат',
    [ColorPalette.NEON]: 'Неон',
  },
  en: {
    title: 'Audio Visualizer',
    welcome_title: 'Welcome',
    welcome_subtitle: 'Upload an audio file to begin',
    upload: 'Upload',
    upload_tooltip: 'Upload audio file(s)',
    volume_label: 'Volume',
    settings_tooltip: 'Settings',
    settings_title: 'Settings',
    language: 'Language',
    russian: 'Русский',
    english: 'English',
    color_palette: 'Color Palette',
    visualization_type: 'Visualization Type',
    intensity: 'Intensity',
    intensity_description: 'Strength and amplitude of visual effects',
    playback_speed: 'Playback Speed',
    playback_speed_description: 'Slow down or speed up the track',
    visualization_equalizer: 'Visualization Equalizer',
    bass_gain: 'Bass Gain',
    mids_gain: 'Mids Gain',
    treble_gain: 'Treble Gain',
    bass_mid_crossover: 'Bass/Mids Crossover',
    mid_treble_crossover: 'Mids/Treble Crossover',
    fullscreen_enter: 'Fullscreen',
    fullscreen_exit: 'Exit Fullscreen',
    next_track: 'Next Track',
    prev_track: 'Previous Track',
    no_track: 'No track selected',
    ai_palette_title: 'AI Palette Generator',
    ai_palette_prompt: 'Describe a mood (e.g., "neon city")',
    ai_generate: 'Generate',
    ai_generating: 'Generating...',
    [FrequencyBand.BASS]: 'Bass',
    [FrequencyBand.MIDS]: 'Mids',
    [FrequencyBand.TREBLE]: 'Treble',
    [ColorPalette.AI]: 'Custom (AI)',
    [VisualizationType.BARS]: 'Bars',
    [VisualizationType.WAVEFORM]: 'Waveform',
    [VisualizationType.RADIAL]: 'Radial',
    [VisualizationType.GALAXY]: 'Galaxy',
    [VisualizationType.CIRCLES]: 'Circles',
    [VisualizationType.GRID]: 'Grid',
    [VisualizationType.FLOWER]: 'Flower',
    [VisualizationType.STRINGS]: 'Strings',
    [VisualizationType.TUNNEL]: 'Tunnel',
    [ColorPalette.VIBRANT]: 'Vibrant',
    [ColorPalette.OCEAN]: 'Ocean',
    [ColorPalette.FOREST]: 'Forest',
    [ColorPalette.SUNSET]: 'Sunset',
    [ColorPalette.NEON]: 'Neon',
  },
};

type TranslationKeys = keyof typeof translations.en | FrequencyBand;

export const useTranslation = () => {
  const { language } = useSettings();
  
  const t = (key: TranslationKeys) => {
    // Fallback logic to ensure a key always resolves
    const lang = translations[language] as Record<TranslationKeys, string>;
    const fallbackLang = translations.en as Record<TranslationKeys, string>;
    return lang[key] || fallbackLang[key];
  };

  return { t, language };
};
